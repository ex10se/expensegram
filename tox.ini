[tox]
skipsdist=True
envlist =
    py39, flake8
isolated_build = True
docker =
    db

[gh-actions]
python =
    3.9: py39, flake8

[docker:db]
image = postgres:alpine
# Environment variables are passed to the container. They are only
# available to that container, and not to the testenv, other
# containers, or as replacements in other parts of tox.ini
environment =
    POSTGRES_PASSWORD=postgres
    POSTGRES_USER=postgres
    POSTGRES_DB=postgres
healthcheck_cmd = PGPASSWORD=$POSTGRES_PASSWORD psql \
    --user=$POSTGRES_USER --dbname=$POSTGRES_DB \
    --host=127.0.0.1 --quiet --no-align --tuples-only \
    -1 --command="SELECT 1"
healthcheck_timeout = 1
healthcheck_retries = 30
healthcheck_interval = 1
healthcheck_start_period = 1

[flake8]
i-control-code = true
max-arguments = 10
max-import-from-members = 15
max-imports = 15
max-line-complexity = 40
max-line-length = 120
max-local-variables = 10
max-methods = 10
max-module-expressions = 10
max-module-members = 10
max-string-usages = 10
nested-classes-whitelist = Config
statistics = true
count = true
disable-noqa = false
exclude =
    migrations
    __pycache__
    .tox
    .env
    venv
    base.py
    local.py
    fixtures

[testenv:flake8]
changedir=app
commands =
    flake8 ./
exclude =
    migrations
    __pycache__
    .tox
    .env
    venv
    base.py
    local.py
    fixtures
deps =
    -r requirements.txt

[testenv]
passenv = POSTGRES_*
allowlist_externals=*
changedir=app
commands =
    python manage.py makemigrations --check
    coverage erase
    coverage run manage.py test --keepdb -v=3
    coverage report -m --skip-covered --omit .tox/*,manage.py --fail-under=80

envdir = {toxworkdir}/venvs/{envname}
setenv =
       DJANGO_SETTINGS_MODULE=config.settings.local
       PYTHONDONTWRITEBYTECODE=1
deps =
    -r requirements.txt
